import { defineStore } from 'pinia'
import { ref, computed } from 'vue'
import { supabase } from '@/lib/supabase'

export interface User {
  id: string
  email: string
  username: string
  full_name: string
  money: number
  level: number
  experience: number
  created_at: string
}

export const useAuthStore = defineStore('auth', () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const user = ref<User | null>(null)
  const loading = ref(false)
  const error = ref<string | null>(null)
  const isAuthenticated = computed(() => !!user.value)

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const signUp = async (email: string, password: string, username: string, fullName: string) => {
    try {
      loading.value = true
      error.value = null

      console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', { email, username })

      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase Auth
      const { data: authData, error: authError } = await supabase.auth.signUp({
        email,
        password,
        options: {
          data: {
            username,
            full_name: fullName
          }
        }
      })

      if (authError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ Supabase Auth:', authError)
        throw authError
      }

      if (authData.user) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ auth.users:', authData.user.id)
        console.log('üìß Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω:', authData.user.email_confirmed_at)
        
        // –ù–ï —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏!
        console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ –≤—Ö–æ–¥–µ')
      }

      console.log('üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
      return true
    } catch (err) {
      error.value = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
      console.error('‚ùå Sign up error:', err)
      return false
    } finally {
      loading.value = false
    }
  }

  // –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const signIn = async (email: string, password: string) => {
    try {
      loading.value = true
      error.value = null

      const { data, error: authError } = await supabase.auth.signInWithPassword({
        email,
        password
      })

      if (authError) {
        throw authError
      }

      if (data.user) {
        await loadUserProfile(data.user.id)
      }

      return true
    } catch (err) {
      error.value = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞'
      console.error('Sign in error:', err)
      return false
    } finally {
      loading.value = false
    }
  }

  // –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const signOut = async () => {
    try {
      loading.value = true
      error.value = null

      const { error: authError } = await supabase.auth.signOut()

      if (authError) {
        throw authError
      }

      user.value = null
      return true
    } catch (err) {
      error.value = err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞'
      console.error('Sign out error:', err)
      return false
    } finally {
      loading.value = false
    }
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const loadUserProfile = async (userId: string) => {
    try {
      console.log('üìã –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId)
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
      const { data, error: fetchError } = await supabase
        .from('user_profiles')
        .select('*')
        .eq('id', userId)
        .single()

      if (fetchError && fetchError.code !== 'PGRST116') { // PGRST116 = no rows found
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è:', fetchError)
        throw fetchError
      }

      // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
      if (!data) {
        console.log('üÜï –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...')
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ auth
        const { data: authUser, error: authError } = await supabase.auth.getUser()
        if (authError || !authUser.user) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        }

        console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ auth:', {
          email: authUser.user.email,
          username: authUser.user.user_metadata?.username,
          full_name: authUser.user.user_metadata?.full_name
        })

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        const profileData = {
          id: userId,
          email: authUser.user.email || '',
          username: authUser.user.user_metadata?.username || `user_${userId.slice(0, 8)}`,
          full_name: authUser.user.user_metadata?.full_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          money: 5000, // –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
          level: 1,
          experience: 0
        }

        console.log('üíæ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å –¥–∞–Ω–Ω—ã–º–∏:', profileData)
        
        const { error: insertError } = await supabase
          .from('user_profiles')
          .insert(profileData)

        if (insertError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', insertError)
          throw insertError
        }

        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        const { data: newProfile, error: newFetchError } = await supabase
          .from('user_profiles')
          .select('*')
          .eq('id', userId)
          .single()

        if (newFetchError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:', newFetchError)
          throw newFetchError
        }

        console.log('üì• –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω:', newProfile)
        user.value = newProfile
      } else {
        console.log('üì• –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω:', data)
        // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª –¥–ª—è –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ/0
        if ((data as any).money == null || (data as any).money === 0) {
          const start = 5000
          const { error: fixError } = await supabase
            .from('user_profiles')
            .update({ money: start })
            .eq('id', userId)
          if (!fixError) {
            ;(data as any).money = start
          } else {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª:', fixError)
          }
        }
        user.value = data
      }
    } catch (err) {
      console.error('‚ùå Error loading user profile:', err)
      throw err
    }
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
  const initAuth = async () => {
    try {
      loading.value = true
      console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...')
      
      const { data: { session } } = await supabase.auth.getSession()
      
      if (session?.user) {
        console.log('üë§ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–µ—Å—Å–∏–∏:', session.user.id)
        console.log('üìß Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω:', session.user.email_confirmed_at)
        
        // –†–∞–∑—Ä–µ—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è)...')
        await loadUserProfile(session.user.id)
      } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Å—Å–∏–∏')
      }
    } catch (err) {
      console.error('‚ùå Auth init error:', err)
    } finally {
      loading.value = false
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const updateMoney = async (amount: number) => {
    if (!user.value) return false

    try {
      const newAmount = user.value.money + amount
      
      const { error: updateError } = await supabase
        .from('user_profiles')
        .update({ money: newAmount })
        .eq('id', user.value.id)

      if (updateError) {
        throw updateError
      }

      user.value.money = newAmount
      return true
    } catch (err) {
      console.error('Error updating money:', err)
      return false
    }
  }

  // –°–ø–∏—Å–∞–Ω–∏–µ –¥–µ–Ω–µ–≥
  const spendMoney = async (amount: number) => {
    if (!user.value || user.value.money < amount) return false

    return await updateMoney(-amount)
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–Ω–µ–≥
  const addMoney = async (amount: number) => {
    return await updateMoney(amount)
  }

  // –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–æ–º–ø–∞–Ω–∏–∏ (–ù–ï —É–¥–∞–ª—è–µ—Ç –∏–∑ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞)
  const resetCompanyProgress = async () => {
    if (!user.value) {
      console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω')
      return false
    }

    try {
      loading.value = true
      error.value = null

      console.log('üîÑ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–º–ø–∞–Ω–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.value.id)

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, –æ—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞
      const { error: updateError } = await supabase
        .from('user_profiles')
        .update({
          money: 5000, // –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ (–∫–∞–∫ —É –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞)
          level: 1,    // –ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
          experience: 0, // –ù–∞—á–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç
          updated_at: new Date().toISOString()
        })
        .eq('id', user.value.id)

      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', updateError)
        throw updateError
      }

      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.value.id)
      
      const { error: warehouseError } = await supabase
        .from('user_warehouse_inventory')
        .delete()
        .eq('user_id', user.value.id)

      if (warehouseError) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–∫–ª–∞–¥–∞:', warehouseError)
      } else {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥–∞ –æ—á–∏—â–µ–Ω—ã')
      }

      const { error: clothingError } = await supabase
        .from('user_clothing_inventory')
        .delete()
        .eq('user_id', user.value.id)

      if (clothingError) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –æ–¥–µ–∂–¥—ã:', clothingError)
      } else {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–¥–µ–∂–¥—ã –æ—á–∏—â–µ–Ω—ã')
      }

      // –û—á–∏—â–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–∫–ª–∞–¥–∞
      const { error: transactionsError } = await supabase
        .from('warehouse_transactions')
        .delete()
        .eq('user_id', user.value.id)

      if (transactionsError) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transactionsError)
      } else {
        console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å–∫–ª–∞–¥–∞ –æ—á–∏—â–µ–Ω—ã')
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      user.value.money = 5000
      user.value.level = 1
      user.value.experience = 0
      
      console.log('‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', {
        money: user.value.money,
        level: user.value.level,
        experience: user.value.experience
      })

      // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
      console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º localStorage...')
      localStorage.removeItem(`home_pantry_${user.value.id}`)
      localStorage.removeItem('social_posts')
      localStorage.removeItem('social_responses')
      localStorage.removeItem('social_demo_queue')
      localStorage.removeItem('social_visible_orders')
      localStorage.removeItem('social_taken_orders')
      localStorage.removeItem('warehouse_materials')
      localStorage.removeItem('warehouse_clothing')
      localStorage.removeItem('warehouse_stats')
      localStorage.removeItem('warehouse_transactions')
      localStorage.removeItem(`company_state_${user.value.id}`)
      localStorage.removeItem(`character_state_${user.value.id}`)
      
      // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      Object.keys(localStorage).forEach(key => {
        if (key.includes(user.value.id)) {
          localStorage.removeItem(key)
        }
      })
      
      // –û—á–∏—â–∞–µ–º –∫—ç—à –≤ window –æ–±—ä–µ–∫—Ç–µ
      if ((window as any).__warehouseMaterialsCatalog) {
        delete (window as any).__warehouseMaterialsCatalog
        console.log('‚úÖ –ö—ç—à –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –æ—á–∏—â–µ–Ω –∏–∑ window')
      }
      
      // –û—á–∏—â–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫—ç—à–∏
      Object.keys(window).forEach(key => {
        if (key.includes('warehouse') || key.includes('material') || key.includes('clothing')) {
          delete (window as any)[key]
        }
      })
      
      console.log('‚úÖ localStorage –∏ –∫—ç—à –æ—á–∏—â–µ–Ω—ã')

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Å–µ—Ö stores
      // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º stores –¥–ª—è —Å–±—Ä–æ—Å–∞ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è
      const { useCompanyStore } = await import('@/stores/companyStore')
      const { useWarehouseStore } = await import('@/stores/warehouseStore')
      const { usePantryStore } = await import('@/stores/pantryStore')
      const { useSocialStore } = await import('@/stores/socialStore')

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ stores
      const companyStore = useCompanyStore()
      const warehouseStore = useWarehouseStore()
      const pantryStore = usePantryStore()
      const socialStore = useSocialStore()

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
      if (companyStore.resetState) companyStore.resetState()
      if (warehouseStore.resetWarehouse) warehouseStore.resetWarehouse()
      if (pantryStore.resetState) pantryStore.resetState()
      if (socialStore.resetState) socialStore.resetState()

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∫–ª–∞–¥–∞ –∏–∑ –±–∞–∑—ã (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø—É—Å—Ç–æ)
      if (warehouseStore.fetchMaterials) {
        await warehouseStore.fetchMaterials()
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å–∫–ª–∞–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞:', warehouseStore.materials)
      }
      if (warehouseStore.fetchClothing) {
        await warehouseStore.fetchClothing()
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–¥–µ–∂–¥—ã —Å–∫–ª–∞–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Å–±—Ä–æ—Å–∞:', warehouseStore.clothing)
      }

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
      await loadUserProfile(user.value.id)
      
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
        money: user.value?.money,
        level: user.value?.level,
        experience: user.value?.experience
      })

      console.log('‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–º–ø–∞–Ω–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω')
      return true

    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–æ–º–ø–∞–Ω–∏–∏:', err)
      error.value = '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
      return false
    } finally {
      loading.value = false
    }
  }

  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    user,
    loading,
    error,
    isAuthenticated,
    
    // –î–µ–π—Å—Ç–≤–∏—è
    signUp,
    signIn,
    signOut,
    initAuth,
    updateMoney,
    spendMoney,
    addMoney,
    resetCompanyProgress
  }
})
